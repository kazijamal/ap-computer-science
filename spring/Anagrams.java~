public class Anagrams{

    // precondition : n > 0
    // postcondition: returns a random sequence of n lowercase letters
    // 'a' => 97
    // 'z' => 122
    public static String randomString(int n){
	String ans = "";
	for (int i = 0; i < n ; i++){
	    int r = 'a' + (int)(Math.random() * ('z' - 'a'));
	    ans +=  (char)r; 
	}
	return ans;
    }
    // O(N)

    // precondition : s != null
    // postcondition: returns a new shuffled string
    public static String shuffle(String s){
	String ans = "";
	int n = s.length();
	for (int i = 0; i < n; i++){
	    int r = (int)(Math.random() * s.length());
	    ans += s.substring(r,r+1);
	    s = s.substring(0,r) + s.substring(r+1);
	 }
	return ans;
    }
    // O(N^2)

    // precondition : a != null and b != null
    // precondition : returns true if a and b are anagrams
    //                false otherwise. Assume both a and b 
    //                contain only lowercase letters. 
    //                Must be O(n^2).
    public static boolean isAnagram(String a, String b){
	String n = b; 
	for (int i = 0; i < a.length(); i++){
	    int index = n.indexOf(a.charAt(i));
	    if (index != -1){
		n = n.substring(0, index) + n.substring(index+1);
	    }
	    else return false;
	}
	if (n.length() == 0)
	    return true;
	return false;
    }

    public static void main(String [] args){
	int N = Integer.parseInt(args[0]);
	String a = randomString(N);
	String b = shuffle(a);
	System.out.println(a);
	System.out.println(b);
	System.out.println(isAnagram(a, a + b)); // false 
	//System.out.println(isAnagram(a, a.substring(1))); // false
        System.out.println(isAnagram(a,b)); // true
    }

}
